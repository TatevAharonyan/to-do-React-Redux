{"version":3,"sources":["const/index.js","actions/index.js","todo/TodoForm.js","todo/TodoList.js","Tasks.js","App.js","reportWebVitals.js","reduser/reduser.jsx","index.js"],"names":["ADD_TODO","CHECK_TODO","REMOVE_TODO","checkTodo","id","type","payload","removeTodo","addTodo","text","connect","dispatch","bindActionCreators","useState","setText","onSubmit","e","preventDefault","className","console","log","value","onChange","target","TodoList","this","props","state","map","todo","check","onClick","style","color","Component","Tasks","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Math","random","store","createStore","action","item","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0046f58.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const CHECK_TODO = \"CHECK_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";","import { ADD_TODO, CHECK_TODO, REMOVE_TODO } from \"./../const/index\";\r\n\r\nexport const checkTodo = (id) => {\r\n    return {\r\n        type: CHECK_TODO,\r\n        payload: id,\r\n    }\r\n}\r\n\r\nexport const removeTodo = (id) => {\r\n    return {\r\n        type: REMOVE_TODO,\r\n        payload: id,\r\n    }\r\n\r\n}\r\n\r\nexport const addTodo = text => {\r\n    return {\r\n        type: ADD_TODO,\r\n        payload: text\r\n    }\r\n}","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addTodo } from \"./../actions/index\"\r\n\r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const changeInputText = e => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const formSubmit = e => {\r\n        e.preventDefault();\r\n        if (text !== \"\") {\r\n            e.preventDefault();\r\n            // collbackFunction, store.dispatch\r\n            (addTodo(text));\r\n\r\n            setText(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={formSubmit} className=\"form\" >\r\n            {  console.log(text)}\r\n            <input\r\n                type=\"text\" value={text}\r\n                onChange={changeInputText}\r\n            />\r\n            <button type=\"submit\"> Add </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return bindActionCreators({\r\n        addTodo\r\n    },\r\n        dispatch\r\n    )\r\n\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoForm);","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { checkTodo, removeTodo } from \"./../actions/index\"\r\n\r\n\r\n    class TodoList extends Component {\r\n        \r\nrender (){\r\n    return (\r\n        <div className=\"list\" >\r\n\r\n\r\n            {\r\n                this.props.state.map((todo) => {\r\n                    console.log (todo)\r\n                    return (\r\n                        <div  key={todo.id}\r\n                        className = { todo.check ? \"item_true\" : \"item_false\" }\r\n                          >\r\n\r\n                            <div \r\n                            className = { todo.check ? \"check_true\" : \"check_false\"}\r\n                            onClick = { () => this.props.checkTodo(todo.id) }\r\n                            >\r\n\r\n                            </div>\r\n                                <del \r\n                                style = {{color : `${todo.check ?  \"#01a322\" : \"transparent\" }`}}\r\n                                >\r\n                                    <p> {todo.text} </p>\r\n                                </del>\r\n                            <div \r\n                            className=\"delete_item\" \r\n                            onClick = { () => this.props.removeTodo(todo.id)}\r\n                            >\r\n                                X\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        state,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return  bindActionCreators ({\r\n        checkTodo,\r\n        removeTodo,\r\n    }, \r\n    dispatch\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)( TodoList);","const Tasks = () => {\r\n    return (\r\n        <div className = \"header\">\r\n             <p>Tasks</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;","import TodoForm from \"./todo/TodoForm\";\nimport TodoList from \"./todo/TodoList\";\nimport './App.css';\nimport Tasks from \"./Tasks\";\n\n\nfunction App() {\n\n  return (\n\n    <div className=\"App\" >\n      <div id=\"container\" >\n        <Tasks />\n        <TodoList />\n        <TodoForm />\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TODO, CHECK_TODO, REMOVE_TODO } from \"./../const/index\";\r\n\r\nconst  initialState = \r\n     [\r\n        {id: Math.random(),\r\n        text:\"Prepare for Session\",\r\n        check: false,\r\n    },{ \r\n        id:  Math.random(),\r\n        text: \"Assign Tascks\",\r\n        check: false,\r\n    }, {\r\n        id:  Math.random(),\r\n        text: \"Bee there on time\",\r\n        check: false,\r\n    } , {\r\n        id:  Math.random(),\r\n        text: \"Start Session\",\r\n        check: false,\r\n    }];\r\n\r\n \r\nexport const reducer = (state  = initialState, action) =>  {\r\n    switch( action.type ){\r\n        case ADD_TODO:\r\n            return [\r\n                 {\r\n                    id:  Math.random(),\r\n                    text: action.payload,\r\n                    check: false,\r\n                  } ,\r\n                ...state,                  \r\n            ];\r\n        case CHECK_TODO:\r\n            return state.map(item => item.id === action.payload ? {...item, check: !item.check} : item );\r\n            \r\n        case REMOVE_TODO:\r\n            return state.filter(item => item.id !== action.payload );\r\n         \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { reducer } from \"./reduser/reduser\"\n\n\n\n export const store = createStore (reducer);\n\nReactDOM.render(\n  <Provider store = {store} >\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}